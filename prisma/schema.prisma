// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  firstName  String
  lastName String
  password String
  phone String @unique
  shippingAddress String?
  billingAddress String?
  isEmailVerifield Boolean?
  isPhoneVerified Boolean?
  role String @default("User")
  carts Cart[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Store{
  id Int @id @default(autoincrement())
  name String
  cacNumber String?
  email String @unique
  phone String @unique
  logo String?
  products Product[]
  staff Staff[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

}

model Product {
  id Int @id @default(autoincrement())
  name String
  price Decimal
  description String
  stock Decimal
  categoryId Int
  images String
  sku String
  status String @default("In-Stock")
  storeId Int
  cartItems CartItem[]
  reviews Review[]
  store   Store @relation(fields: [storeId], references: [id])
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Coupon{
  id Int @id @default (autoincrement())
  percentage Decimal
  totalAmount Decimal
  code String
}

model Staff{
  id Int @id @default (autoincrement())
  name String
  age Int
  phone Int
  sex Boolean
  maritalStatus String
  userid Int
  storeId Int
  store Store @relation(fields: [storeId], references: [id])
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Review{
  id Int @id @default (autoincrement())
  text String
  userid Int
  productid Int
  product Product @relation(fields: [productid], references: [id])
  rating String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Cart{
  id Int @id @default (autoincrement())
  userid Int
  user User @relation(fields: [userid], references: [id])
  items String
  totalPrice Int
  cartitems CartItem[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model CartItem{
  id Int @id @default (autoincrement())
  cartid Int
  cart Cart @relation(fields: [cartid], references: [id])
  productid Int
  product Product @relation(fields: [productid], references: [id])
  quantity Int
  unitPrice Int
  totalPrice Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}